import pandas as pd

# Load your data (replace with your actual file path)
file_path = "your_file.csv"
df = pd.read_csv(file_path)

# Step 1: Define a function to assign positive or negative sign based on the 'Direction' column
def apply_sign(row):
    if row['Direction'] == 'DEL':
        return row['Amount USD']
    elif row['Direction'] == 'REC':
        return -row['Amount USD']
    else:
        return 0

# Step 2: Apply the function to create a new column 'Signed Amount USD'
df['Signed Amount USD'] = df.apply(apply_sign, axis=1)

# Step 3: Calculate netting opportunities based on the 'net' column

# For 'net' = 'n'
net_n_opportunities = df[df['net'] == 'n'].groupby('Unique')['Signed Amount USD'].sum().reset_index()
net_n_opportunities.columns = ['Unique', 'Netting Opportunity USD (n)']

# For 'net' = 'nn'
net_nn_opportunities = df[df['net'] == 'nn'].groupby('Unique')['Signed Amount USD'].sum().reset_index()
net_nn_opportunities.columns = ['Unique', 'Netting Opportunity USD (nn)']

# Step 4: Merge the results for comparison
comparison_netting_opportunities = pd.merge(net_n_opportunities, net_nn_opportunities, on='Unique', how='outer').fillna(0)

# Step 5: Calculate Total Netting Opportunity (sum of n and nn)
comparison_netting_opportunities['Total Netting Opportunity USD'] = comparison_netting_opportunities['Netting Opportunity USD (n)'] + comparison_netting_opportunities['Netting Opportunity USD (nn)']

# Step 6: Calculate the percentage of n and nn (absolute values used for percentages)
comparison_netting_opportunities['Percentage (n)'] = (comparison_netting_opportunities['Netting Opportunity USD (n)'].abs() / (comparison_netting_opportunities['Netting Opportunity USD (n)'].abs() + comparison_netting_opportunities['Netting Opportunity USD (nn)'].abs())) * 100
comparison_netting_opportunities['Percentage (nn)'] = 100 - comparison_netting_opportunities['Percentage (n)']

# Step 7: Create a new DataFrame where Percentage (n) is 80% or above
filtered_opportunities = comparison_netting_opportunities[comparison_netting_opportunities['Percentage (n)'] >= 80]

# Step 8: Display the final DataFrames
print("Full Comparison of Netting Opportunities with Percentages:")
print(comparison_netting_opportunities)

print("\nFiltered Netting Opportunities (n >= 80%):")
print(filtered_opportunities)

# Step 9: Optionally, save the results to CSV files
comparison_netting_opportunities.to_csv('netting_opportunities_with_percentages.csv', index=False)
filtered_opportunities.to_csv('filtered_netting_opportunities_80_percent_n.csv', index=False)

