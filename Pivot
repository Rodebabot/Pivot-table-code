import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
import numpy as np

# Sample data for counterparties
data = {
    'Counterparty': ['Counterparty A', 'Counterparty B', 'Counterparty C', 'Counterparty D'],
    'Status': ['Good-Mid', 'Good-Bad', 'Mid-Bad', 'Good-Good']
}

# Convert the data into a DataFrame
df = pd.DataFrame(data)

# Mapping the grid colors to statuses
grid_color_mapping = {
    'Good-Good': 'green',
    'Good-Mid': 'yellowgreen',
    'Good-Bad': 'yellow',
    'Mid-Good': 'yellowgreen',
    'Mid-Mid': 'yellow',
    'Mid-Bad': 'orange',
    'Bad-Good': 'yellow',
    'Bad-Mid': 'orange',
    'Bad-Bad': 'red'
}

# Create a 3x3 matrix for the grid
grid_matrix = np.array([
    ['Good-Good', 'Good-Mid', 'Good-Bad'],
    ['Mid-Good', 'Mid-Mid', 'Mid-Bad'],
    ['Bad-Good', 'Bad-Mid', 'Bad-Bad']
])

# Plot the grid
plt.figure(figsize=(8, 6))
for i in range(grid_matrix.shape[0]):
    for j in range(grid_matrix.shape[1]):
        status = grid_matrix[i, j]
        color = grid_color_mapping[status]
        plt.gca().add_patch(plt.Rectangle((j, i), 1, 1, color=color))

        # Add the text (status label)
        plt.text(j + 0.5, i + 0.5, status, color='black', weight='bold', 
                 fontsize=12, va='center', ha='center')

# Customizing the plot
plt.xlim(0, 3)
plt.ylim(0, 3)
plt.gca().invert_yaxis()

# Labeling axes
plt.xticks([0.5, 1.5, 2.5], ['Good', 'Mid', 'Bad'])
plt.yticks([0.5, 1.5, 2.5], ['Bad', 'Mid', 'Good'])

plt.xlabel('Volume')
plt.ylabel('Impact')

# Show the grid lines
plt.grid(True)

# Show the plot
plt.show()

